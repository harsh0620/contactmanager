{"version":3,"sources":["components/layout/Header.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","branding","this","props","className","href","to","src","alt","Component","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","data","value","children","Consumer","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","AddContact","email","phone","errors","onSubmit","e","a","preventDefault","newContact","post","history","push","target","bind","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","onClick","Contacts","Fragment","key","Test","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d6425ac0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { branding } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <img src=\"./images/home.png\" alt=\"h\" className=\"icon\" /> Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <img src=\"./images/ques.png\" alt=\"h\" className=\"icon\" />\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <img src=\"./images/plus.png\" alt=\"h\" className=\"icon\" />\r\n                  Add\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header red\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-white btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header red\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-white btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true,\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <img\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  src=\"./images/sort-down.png\"\r\n                  alt=\"arrow\"\r\n                  className=\"arrow\"\r\n                ></img>\r\n                <img\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  src=\"./images/bin.png\"\r\n                  alt=\"bin\"\r\n                  className=\"arrow bin\"\r\n                ></img>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <img src=\"./images/pen.png\" alt=\"pen\" className=\"pen bin\" />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                {\" \"}\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry,that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"./context\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              {/* <AddContact />\n              <Contacts /> */}\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}